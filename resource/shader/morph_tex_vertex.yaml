type: VERTEX
source:
 - |
        #version 150

        in vec4 Position;
        in vec2 TexCoord0;

        uniform samplerBuffer BufferTex;
        uniform mat4 MVPMatrix;
        uniform mat4 MVMatrix;

        uniform Animation {
                int     BlendShapesCnt;
                float   BlendShapesWeights[12];
        };

        out vec2      TexCoord;

        void main() {

                vec4 BlendedPosition = Position;
                vec3 bs;
                for (int i = 0; i < BlendShapesCnt; ++i) {

                        bs.x = texelFetch(BufferTex, (gl_VertexID * 3 * BlendShapesCnt) + i * 3 + 0).x;
                        bs.y = texelFetch(BufferTex, (gl_VertexID * 3 * BlendShapesCnt) + i * 3 + 1).x;
                        bs.z = texelFetch(BufferTex, (gl_VertexID * 3 * BlendShapesCnt) + i * 3 + 2).x;

                        BlendedPosition += vec4(BlendShapesWeights[i] * bs, 0);
                }

                gl_Position = MVPMatrix * (MVMatrix * BlendedPosition);
                TexCoord    = TexCoord0;
        }

