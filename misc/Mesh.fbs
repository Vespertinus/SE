
include "Common.fbs";

namespace SE.FlatBuffers;

struct BoundingBox {
        min:Vec3;
        max:Vec3;
}

table VertexAttribute {
        name:string (required);
        offset:uint16 = 0;
        elem_size:uint8 = 3;
        buffer_ind:uint8 = 0;
}

table FloatVector {
        data:[float];
}
table ByteVector {
        data:[ubyte];
}
table Uint32Vector {
        data:[uint32];
}
table Uint16Vector {
        data:[uint16];
}
table Uint8Vector {
        data:[uint8];
}

union VertexBufferU {
        FloatVector,
        ByteVector,
        Uint32Vector
}

union IndexBufferU {
        Uint8Vector,
        Uint16Vector,
        Uint32Vector
}

table VertexBuffer {

        buf:VertexBufferU (required);
        stride:uint8 = 32;
}

table IndexBuffer {

        buf:IndexBufferU (required);
}

//TODO fan, strip and line_loop
enum PrimitiveType : uint8 {
        GEOM_TRIANGLES  = 1,
        GEOM_LINES      = 2,
        GEOM_POINTS     = 3
}


table Shape {

        bbox:BoundingBox (required);
        index_elem_start:uint32 = 0;
        index_elem_count:uint32;
}

table Mesh {

        index:IndexBuffer (required);
        vertices:[VertexBuffer] (required);
        attributes:[VertexAttribute] (required);
        primitive_type:PrimitiveType = GEOM_TRIANGLES;

        shapes:[Shape] (required);
        bbox:BoundingBox (required);
}

table MeshHolder {
        mesh:Mesh;
        path:string;
        name:string;
}

root_type Mesh;

file_identifier "SEMS";
file_extension "sems";

